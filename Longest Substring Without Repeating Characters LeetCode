/*     Longest Substring Without Repeating Characters LeetCode      */


class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s.length()==0)
            return 0;
        int i=0,j=0,ans=1,len;
        
        // we will use sliding window technique
        
        set<char> set;
        
        while(j<s.length())
        {
            if(set.find(s[j])!=set.end())
            {
                //if s[j] already exists then its duplicate must be s[i], so remove it
                while(set.find(s[j])!=set.end() && set.empty()==false)
                {
                    set.erase(s[i]);
                    i++;
                }
                if(j==s.length()-1)
                    break;
            }
            //now insert s[j] and increment j
            set.insert(s[j]);
            len=j-i+1;
            if(len>ans)
                ans=len;
            j++;
        }
        return ans;
    }
};
