/*                                    Non Repeating Numbers                           */

//Problem Link-> https://www.geeksforgeeks.org/find-two-non-repeating-elements-in-an-array-of-repeating-elements/

/* Approach-> Use hash map and store frequency of each element */


#include<bits/stdc++.h>
using namespace std;

class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
        vector<int>ans;
        int c=0;
        map<int,int>hash;
        for(auto it:nums)
        {
            hash[it]++;
        }
        for(auto v:hash)
        {
            if(v.second==1)
            {
                ans.push_back(v.first);
                c++;
            }
            if(c==2)
                break;
        }
        return ans;
    }
};

int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n; 
    	cin >> n;
    	vector<int> v(2 * n + 2);
    	for(int i = 0; i < 2 * n + 2; i++)
    		cin >> v[i];
    	Solution ob;
    	vector<int > ans = ob.singleNumber(v);
    	for(auto i: ans)
    		cout << i << " ";
    	cout << "\n";
    }
	return 0;
}  
