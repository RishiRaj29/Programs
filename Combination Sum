/*      Combination Sum   (LeetCode)   */

void fun(int index,int target,vector<int> &candidates,vector<int> &ds,vector<vector<int>> &ans)
{
    if(target==0 && index==candidates.size())
    {
        ans.push_back(ds);
        return;
    }
    
    if(index==candidates.size())
        return;
    
    if(candidates[index]<=target)
    {
        ds.push_back(candidates[index]);
        fun(index,target-candidates[index],candidates,ds,ans);
        ds.pop_back();
    }
    
    fun(index+1,target,candidates,ds,ans);
}


class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) 
    {
        vector<vector<int>>ans;
        vector<int>ds;
        fun(0,target,candidates,ds,ans);
        return ans;
    }
};
