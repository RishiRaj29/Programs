                       /*       Trapping Rain Water       */
/*
INPUT-> 
4
6
3 0 0 2 0 4
4
7 4 0 9
3
6 9 9
7
8 8 2 4 5 5 1

OUTPUT->
10
10
0
4
*/

/* In this problem we take two arrays left and right and find the max element from the left and right for each index of the array. The amount of water collected at index i is 
determined by the formula min(left[i],right[i])-arr[i]. So we apply this formula for all the indices of the array*/

//Solution->

#include<bits/stdc++.h>
using namespace std;

int WaterCollected(int arr[],int n)
{
    int i,max,left[n+1],right[n+1],ans=0;
    max=arr[0];left[0]=arr[0];
    for(i=1;i<n;i++)
    {
        if(arr[i]>max)
        {
            max=arr[i];
            left[i]=max;
        }
        else
            left[i]=max;
    }
    max=arr[n-1];right[n-1]=arr[n-1];
    for(i=n-2;i>=0;i--)
    {
        if(arr[i]>max)
        {
            max=arr[i];
            right[i]=max;
        }
        else
            right[i]=max;
    }
    for(i=0;i<n;i++)
    {
        ans+=min(left[i],right[i])-arr[i];
    }
    return ans;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,i;
        cin>>n;
        int arr[n+1];
        for(i=0;i<n;i++)
            cin>>arr[i];
        int ans=WaterCollected(arr,n);
        cout<<ans<<endl;
    }
    return 0;
}
