/*     Minimum Path Sum LeetCode       */

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int row=grid.size(),col=grid[0].size(),i,j;
        vector<vector<int>> dp(row+1,vector<int>(col+1,-1));
        
        dp[0][0]=grid[0][0];
        
        for(i=1;i<row;i++)//In the first coloumn you can reach each cell only from above
            dp[i][0]=dp[i-1][0]+grid[i][0];
        
        for(j=1;j<col;j++)//In the first row you can reach each cell only from left
            dp[0][j]=dp[0][j-1]+grid[0][j];
        
        for(i=1;i<row;i++)//For all remaining cells you can reach each cell from above or left
        {
            for(j=1;j<col;j++)
            {
                dp[i][j]=grid[i][j]+min(dp[i][j-1],dp[i-1][j]);
            }
        }
        return dp[row-1][col-1];
    }
};
