/*          Add 1 to a number represented as linked list         */

/*
Approach->
1)Reverse given linked list. For example, 1-> 9-> 9 -> 9 is converted to 9-> 9 -> 9 ->1.

2)Start traversing linked list from leftmost node and add 1 to it. If there is a carry, move to the next node. Keep moving to the next node while there is a carry.

3)Reverse modified linked list and return head.
*/

#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node *next;
};

void Insert(struct Node **head,int value)
{
    struct Node *new_node,*temp=*head;
    new_node=(struct Node*)malloc(sizeof(struct Node));
    new_node->data=value;
    new_node->next=NULL;
    if((*head)==NULL)
        *head=new_node;
    else
    {
        while(temp->next!=NULL)
             temp=temp->next;
        temp->next=new_node;
    }
}

struct Node* ReverseList(struct Node *head)
{
    struct Node *p=head,*c=head->next,*n=c->next;
    p->next=NULL;
    while(c->next!=NULL)
    {
        c->next=p;
        p=c;
        c=n;
        n=n->next;
    }
    c->next=p;
    head=c;
    return head;
}

struct Node* Add(struct Node *head)
{
    head=ReverseList(head);
    struct Node *temp=head;
    temp->data+=1;
    if(temp->data==10)
    {
        temp->data=0;
        temp=temp->next;
        while(temp->next!=NULL)
        {
            temp->data+=1;
            if(temp->data<10)
               break;
            else
            {
                temp->data=0;
                temp=temp->next;
            }
        }
        if(temp->next==NULL)
        {
            if(temp->data<9)
                temp->data+=1;
            else
            {
                temp->data=0;
                struct Node *new_node=(struct Node*)malloc(sizeof(struct Node));
                new_node->data=1;
                temp->next=new_node;
                new_node->next=NULL;
            }
        }
    }
    head=ReverseList(head);
    return head;
}

void Display(struct Node *head)
{
    struct Node *temp=head;
    while(temp->next!=NULL)
    {
        cout<<temp->data;
        temp=temp->next;
    }
    cout<<temp->data<<endl;
}
int main()
{
    struct Node *head=NULL;
    Insert(&head,9);
    Insert(&head,9);
    Insert(&head,9);
    Insert(&head,9);
    Insert(&head,9);
    cout<<"Entered Number:-";
    Display(head);
    head=Add(head);
    cout<<"The Number after Addition:-";
    Display(head);
    return 0;
}
