/*       Subset Sums         */

// Problem Link-> https://practice.geeksforgeeks.org/problems/subset-sums2234/1

// Solution->

void fun(int index,vector<int> arr,int sum,vector<int> &ans,vector<int> &ds)
{
    if(index==arr.size())
    {
        ans.push_back(sum);
        return;
    }
    
    ds.push_back(arr[index]);
    fun(index+1,arr,sum+arr[index],ans,ds);
    ds.pop_back();
    fun(index+1,arr,sum,ans,ds);
}

class Solution
{
public:
    vector<int> subsetSums(vector<int> arr, int N)
    {
        vector<int>ans,ds;
        fun(0,arr,0,ans,ds);
        sort(ans.begin(),ans.end());
        return ans;
    }
};
