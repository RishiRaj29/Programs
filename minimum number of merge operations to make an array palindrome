//PROBLEM LINK -> https://www.geeksforgeeks.org/find-minimum-number-of-merge-operations-to-make-an-array-palindrome/

/* 
Input->
4
3
15 4 15
4
1 4 5 1
4 
11 14 15 99
6
1 2 3 3 4 1

Output->
0
1
3
3
*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
       int n,count=0;
       cin>>n;
       int a[n+1],i;
       for(i=0;i<n;i++)
       {
          cin>>a[i];
       }
       int j=n-1;i=0;// We will use two pointer technique
       while(i<j)
       {
         if(a[i]==a[j])
         {
            i++;
            j--;
         }
         else if(a[i]<a[j])//there is a possibility that value at i-1 index can be equal to value at j after merging
         {
            i++;
            a[i]+=a[i-1];
            count++;
         }
         else//else the value at j can be equal to i on merging
         {
            j--;
            a[j]+=a[j+1];
            count++;
         }
       }
       cout<<count<<endl;
    }

    return 0;
}
