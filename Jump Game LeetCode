/*    Jump Game LeetCode    */

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n=nums.size();
        
        if(n==1)//for single element array the starting index is ending index
            return true;
        
        if(n>=1 && nums[0]==0)//if the first  element is 0 then we cannot reach the end
            return false;
        
        if(count(nums.begin(),nums.end(),0)==0)//if there is no 0 then we can definitely reach end
            return true;
                
        int max_reach=0;
        
        for(int i=0;i<n-1;i++)//We will try to find the maximum reach from every index
        {
            if(max_reach>=n-1)//if max_reach at any stage becomes greater than or equal to last index
                return true;
            if(i>max_reach)//if we have moved past the max_reach that means that index is not reachable
                return false;
            if(nums[i]==0)
                continue;
            else
                max_reach=max(max_reach,i+nums[i]);
        }
        
        if(max_reach>=n-1)
                return true;
        else
            return false;
    }
};
