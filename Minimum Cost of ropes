/*           Minimum Cost of ropes            */

//Problem Link->  https://www.geeksforgeeks.org/connect-n-ropes-minimum-cost/

//Solution-> 

#include <bits/stdc++.h>
using namespace std;


 class Solution
{
    public:
    //Function to return the minimum cost of connecting the ropes.
    long long minCost(long long arr[], long long n) 
    {
        priority_queue<long long,vector<long long>,greater<long long>>queue;
        for(auto i=0;i<n;i++)
            queue.push(arr[i]);
        long long ans=0;
        while(queue.size()>1)
        {
            auto x=queue.top();
            queue.pop();
            auto y=queue.top();
            queue.pop();
            ans+=x+y;
            queue.push(x+y);
        }
        return ans;
    }
};


int main() {
    long long t;
    cin >> t;
    while (t--) {
        long long n;
        cin >> n;
        long long i, a[n];
        for (i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        cout << ob.minCost(a, n) << endl;
    }
    return 0;
}
  
