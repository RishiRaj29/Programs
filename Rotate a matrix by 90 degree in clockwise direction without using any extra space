/*                     Rotate a matrix by 90 degree in clockwise direction without using any extra space                */

//Problem Link-> https://www.geeksforgeeks.org/rotate-a-matrix-by-90-degree-in-clockwise-direction-without-using-any-extra-space/

/* Approach->  Take the transpose of the matrix and then reverse all the elements of the each row */

// Solution-> 

#include<bits/stdc++.h>

using namespace std;

void rotate(vector<vector<int>>&matrix,int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=i;j<n;j++)
        {
            swap(matrix[i][j],matrix[j][i]);
        }
    }
    for(i=0;i<n;i++)
    {
        reverse(matrix[i].begin(),matrix[i].end());
    }
}

int main()
{
    int n;
    cout<<"Enter the Size of the Square Matrix-\n";
    cin>>n;
    vector<vector<int>>matrix(n,vector<int>(n,0));
    cout<<"Enter the Elements of the Matrix-\n";
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cin>>matrix[i][j];
        }
    }
    cout<<endl;
    cout<<"The Matrix Elements before Rotation are as follows-\n";
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<matrix[i][j]<<"  ";
        }
        cout<<endl;
    }
    cout<<endl;
    rotate(matrix,n);
    cout<<"The Matrix Elements after Rotation are as follows-\n";
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<matrix[i][j]<<"  ";
        }
        cout<<endl;
    }
    return 0;
}
